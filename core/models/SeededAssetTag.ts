/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";
import {
	MechanismEnumFromJSON,
	MechanismEnumToJSON,
	type MechanismEnum,
} from "./MechanismEnum.tsx";
import {
	TagCategoryEnumFromJSON,
	TagCategoryEnumToJSON,
	type TagCategoryEnum,
} from "./TagCategoryEnum.tsx";

/**
 * This is similar to an SeededTag, where this is the minimum information of a tag, but this can get added to a seededAsset,  where you may not yet have an asset id.
 * @export
 * @interface SeededAssetTag
 */
export interface SeededAssetTag {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof SeededAssetTag
	 */
	schema?: EmbeddedModelSchema;
	/**
	 * this is the text that represents the tag.
	 * @type {string}
	 * @memberof SeededAssetTag
	 */
	text: string;
	/**
	 *
	 * @type {MechanismEnum}
	 * @memberof SeededAssetTag
	 */
	mechanism?: MechanismEnum;
	/**
	 *
	 * @type {TagCategoryEnum}
	 * @memberof SeededAssetTag
	 */
	category?: TagCategoryEnum;
}

/**
 * Check if a given object implements the SeededAssetTag interface.
 */
export function instanceOfSeededAssetTag(value: object): boolean {
	let isInstance = true;
	isInstance = isInstance && "text" in value;

	return isInstance;
}

export function SeededAssetTagFromJSON(json: any): SeededAssetTag {
	return SeededAssetTagFromJSONTyped(json, false);
}

export function SeededAssetTagFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): SeededAssetTag {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		text: json["text"],
		mechanism: exists(json, "mechanism")
			? MechanismEnumFromJSON(json["mechanism"])
			: undefined,
		category: exists(json, "category")
			? TagCategoryEnumFromJSON(json["category"])
			: undefined,
	};
}

export function SeededAssetTagToJSON(value?: SeededAssetTag | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		text: value.text,
		mechanism: MechanismEnumToJSON(value.mechanism),
		category: TagCategoryEnumToJSON(value.category),
	};
}
