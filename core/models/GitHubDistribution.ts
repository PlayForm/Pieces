/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";
import {
	GitHubGistDistributionFromJSON,
	GitHubGistDistributionToJSON,
	type GitHubGistDistribution,
} from "./GitHubGistDistribution.tsx";

/**
 *
 * @export
 * @interface GitHubDistribution
 */
export interface GitHubDistribution {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof GitHubDistribution
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {GitHubGistDistribution}
	 * @memberof GitHubDistribution
	 */
	gist?: GitHubGistDistribution;
}

/**
 * Check if a given object implements the GitHubDistribution interface.
 */
export function instanceOfGitHubDistribution(_value: object): boolean {
	const isInstance = true;

	return isInstance;
}

export function GitHubDistributionFromJSON(json: any): GitHubDistribution {
	return GitHubDistributionFromJSONTyped(json, false);
}

export function GitHubDistributionFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): GitHubDistribution {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		gist: exists(json, "gist")
			? GitHubGistDistributionFromJSON(json["gist"])
			: undefined,
	};
}

export function GitHubDistributionToJSON(
	value?: GitHubDistribution | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		gist: GitHubGistDistributionToJSON(value.gist),
	};
}
