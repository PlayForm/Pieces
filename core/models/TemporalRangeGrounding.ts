/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import type { FlattenedRanges } from "./FlattenedRanges.tsx";
import {
	FlattenedRangesFromJSON,
	FlattenedRangesToJSON,
} from "./FlattenedRanges.tsx";

/**
 * This is used in the QGPT flow as well as within the conversation.
 *
 * This will let us know grounding's that you want us to use within a given time range(s).
 *
 * workstreams: is used to describe workstreams context. (specific to the "workstream mapper" - name subject to change)
 * @export
 * @interface TemporalRangeGrounding
 */
export interface TemporalRangeGrounding {
	/**
	 *
	 * @type {FlattenedRanges}
	 * @memberof TemporalRangeGrounding
	 */
	workstreams?: FlattenedRanges;
}

/**
 * Check if a given object implements the TemporalRangeGrounding interface.
 */
export function instanceOfTemporalRangeGrounding(_value: object): boolean {
	const isInstance = true;

	return isInstance;
}

export function TemporalRangeGroundingFromJSON(
	json: any,
): TemporalRangeGrounding {
	return TemporalRangeGroundingFromJSONTyped(json, false);
}

export function TemporalRangeGroundingFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): TemporalRangeGrounding {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		workstreams: exists(json, "workstreams")
			? FlattenedRangesFromJSON(json["workstreams"])
			: undefined,
	};
}

export function TemporalRangeGroundingToJSON(
	value?: TemporalRangeGrounding | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		workstreams: FlattenedRangesToJSON(value.workstreams),
	};
}
