/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import type { EmbeddedModelSchema } from "./EmbeddedModelSchema.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
} from "./EmbeddedModelSchema.tsx";
import type { TLPCodeFragmentClassification } from "./TLPCodeFragmentClassification.tsx";
import {
	TLPCodeFragmentClassificationFromJSON,
	TLPCodeFragmentClassificationToJSON,
} from "./TLPCodeFragmentClassification.tsx";
import type { TLPCodeFragmentDescription } from "./TLPCodeFragmentDescription.tsx";
import {
	TLPCodeFragmentDescriptionFromJSON,
	TLPCodeFragmentDescriptionToJSON,
} from "./TLPCodeFragmentDescription.tsx";
import type { TLPCodeFragmentReclassification } from "./TLPCodeFragmentReclassification.tsx";
import {
	TLPCodeFragmentReclassificationFromJSON,
	TLPCodeFragmentReclassificationToJSON,
} from "./TLPCodeFragmentReclassification.tsx";
import type { TLPCodeFragmentStatistics } from "./TLPCodeFragmentStatistics.tsx";
import {
	TLPCodeFragmentStatisticsFromJSON,
	TLPCodeFragmentStatisticsToJSON,
} from "./TLPCodeFragmentStatistics.tsx";
import type { TLPCodeFragmentTagify } from "./TLPCodeFragmentTagify.tsx";
import {
	TLPCodeFragmentTagifyFromJSON,
	TLPCodeFragmentTagifyToJSON,
} from "./TLPCodeFragmentTagify.tsx";
import type { TLPCodeSnippetSuggestedInteractions } from "./TLPCodeSnippetSuggestedInteractions.tsx";
import {
	TLPCodeSnippetSuggestedInteractionsFromJSON,
	TLPCodeSnippetSuggestedInteractionsToJSON,
} from "./TLPCodeSnippetSuggestedInteractions.tsx";

/**
 *
 * @export
 * @interface TLPCodeSnippetAnalytics
 */
export interface TLPCodeSnippetAnalytics {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof TLPCodeSnippetAnalytics
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {TLPCodeFragmentStatistics}
	 * @memberof TLPCodeSnippetAnalytics
	 */
	statistics?: TLPCodeFragmentStatistics;
	/**
	 *
	 * @type {TLPCodeFragmentClassification}
	 * @memberof TLPCodeSnippetAnalytics
	 */
	classification?: TLPCodeFragmentClassification;
	/**
	 *
	 * @type {TLPCodeFragmentReclassification}
	 * @memberof TLPCodeSnippetAnalytics
	 */
	reclassification?: TLPCodeFragmentReclassification;
	/**
	 *
	 * @type {TLPCodeSnippetSuggestedInteractions}
	 * @memberof TLPCodeSnippetAnalytics
	 */
	suggested?: TLPCodeSnippetSuggestedInteractions;
	/**
	 *
	 * @type {TLPCodeFragmentTagify}
	 * @memberof TLPCodeSnippetAnalytics
	 */
	tagify?: TLPCodeFragmentTagify;
	/**
	 *
	 * @type {TLPCodeFragmentDescription}
	 * @memberof TLPCodeSnippetAnalytics
	 */
	description?: TLPCodeFragmentDescription;
}

/**
 * Check if a given object implements the TLPCodeSnippetAnalytics interface.
 */
export function instanceOfTLPCodeSnippetAnalytics(_value: object): boolean {
	const isInstance = true;

	return isInstance;
}

export function TLPCodeSnippetAnalyticsFromJSON(
	json: any,
): TLPCodeSnippetAnalytics {
	return TLPCodeSnippetAnalyticsFromJSONTyped(json, false);
}

export function TLPCodeSnippetAnalyticsFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): TLPCodeSnippetAnalytics {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		statistics: exists(json, "statistics")
			? TLPCodeFragmentStatisticsFromJSON(json["statistics"])
			: undefined,
		classification: exists(json, "classification")
			? TLPCodeFragmentClassificationFromJSON(json["classification"])
			: undefined,
		reclassification: exists(json, "reclassification")
			? TLPCodeFragmentReclassificationFromJSON(json["reclassification"])
			: undefined,
		suggested: exists(json, "suggested")
			? TLPCodeSnippetSuggestedInteractionsFromJSON(json["suggested"])
			: undefined,
		tagify: exists(json, "tagify")
			? TLPCodeFragmentTagifyFromJSON(json["tagify"])
			: undefined,
		description: exists(json, "description")
			? TLPCodeFragmentDescriptionFromJSON(json["description"])
			: undefined,
	};
}

export function TLPCodeSnippetAnalyticsToJSON(
	value?: TLPCodeSnippetAnalytics | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		statistics: TLPCodeFragmentStatisticsToJSON(value.statistics),
		classification: TLPCodeFragmentClassificationToJSON(
			value.classification,
		),
		reclassification: TLPCodeFragmentReclassificationToJSON(
			value.reclassification,
		),
		suggested: TLPCodeSnippetSuggestedInteractionsToJSON(value.suggested),
		tagify: TLPCodeFragmentTagifyToJSON(value.tagify),
		description: TLPCodeFragmentDescriptionToJSON(value.description),
	};
}
