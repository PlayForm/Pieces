/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import type { AssetFilterPhraseOptions } from "./AssetFilterPhraseOptions.tsx";
import {
	AssetFilterPhraseOptionsFromJSON,
	AssetFilterPhraseOptionsToJSON,
} from "./AssetFilterPhraseOptions.tsx";
import type { EmbeddedModelSchema } from "./EmbeddedModelSchema.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
} from "./EmbeddedModelSchema.tsx";

/**
 *
 * @export
 * @interface AssetFilterPhrase
 */
export interface AssetFilterPhrase {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof AssetFilterPhrase
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {string}
	 * @memberof AssetFilterPhrase
	 */
	value?: string;
	/**
	 *
	 * @type {boolean}
	 * @memberof AssetFilterPhrase
	 */
	annotation?: boolean;
	/**
	 *
	 * @type {boolean}
	 * @memberof AssetFilterPhrase
	 */
	title?: boolean;
	/**
	 *
	 * @type {boolean}
	 * @memberof AssetFilterPhrase
	 */
	content?: boolean;
	/**
	 *
	 * @type {AssetFilterPhraseOptions}
	 * @memberof AssetFilterPhrase
	 */
	options?: AssetFilterPhraseOptions;
}

/**
 * Check if a given object implements the AssetFilterPhrase interface.
 */
export function instanceOfAssetFilterPhrase(_value: object): boolean {
	const isInstance = true;

	return isInstance;
}

export function AssetFilterPhraseFromJSON(json: any): AssetFilterPhrase {
	return AssetFilterPhraseFromJSONTyped(json, false);
}

export function AssetFilterPhraseFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): AssetFilterPhrase {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		value: exists(json, "value") ? json["value"] : undefined,
		annotation: exists(json, "annotation") ? json["annotation"] : undefined,
		title: exists(json, "title") ? json["title"] : undefined,
		content: exists(json, "content") ? json["content"] : undefined,
		options: exists(json, "options")
			? AssetFilterPhraseOptionsFromJSON(json["options"])
			: undefined,
	};
}

export function AssetFilterPhraseToJSON(value?: AssetFilterPhrase | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		value: value.value,
		annotation: value.annotation,
		title: value.title,
		content: value.content,
		options: AssetFilterPhraseOptionsToJSON(value.options),
	};
}
