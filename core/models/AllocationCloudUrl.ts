/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	AllocationStatusEnumFromJSON,
	AllocationStatusEnumToJSON,
	type AllocationStatusEnum,
} from "./AllocationStatusEnum.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";

/**
 * This is one of the 3 possible urls that will route to your cloud :).
 * @export
 * @interface AllocationCloudUrl
 */
export interface AllocationCloudUrl {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof AllocationCloudUrl
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {AllocationStatusEnum}
	 * @memberof AllocationCloudUrl
	 */
	status: AllocationStatusEnum;
	/**
	 * this is the base url that is used to communicat with your vpc.
	 * @type {string}
	 * @memberof AllocationCloudUrl
	 */
	url: string;
}

/**
 * Check if a given object implements the AllocationCloudUrl interface.
 */
export function instanceOfAllocationCloudUrl(value: object): boolean {
	let isInstance = true;
	isInstance = isInstance && "status" in value;
	isInstance = isInstance && "url" in value;

	return isInstance;
}

export function AllocationCloudUrlFromJSON(json: any): AllocationCloudUrl {
	return AllocationCloudUrlFromJSONTyped(json, false);
}

export function AllocationCloudUrlFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): AllocationCloudUrl {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		status: AllocationStatusEnumFromJSON(json["status"]),
		url: json["url"],
	};
}

export function AllocationCloudUrlToJSON(
	value?: AllocationCloudUrl | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		status: AllocationStatusEnumToJSON(value.status),
		url: value.url,
	};
}
