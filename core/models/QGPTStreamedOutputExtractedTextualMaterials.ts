/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";
import {
	TextuallyExtractedMaterialsFromJSON,
	TextuallyExtractedMaterialsToJSON,
	type TextuallyExtractedMaterials,
} from "./TextuallyExtractedMaterials.tsx";

/**
 * This is all the textually extracted materials from the QGPT stream
 * @export
 * @interface QGPTStreamedOutputExtractedTextualMaterials
 */
export interface QGPTStreamedOutputExtractedTextualMaterials {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof QGPTStreamedOutputExtractedTextualMaterials
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {TextuallyExtractedMaterials}
	 * @memberof QGPTStreamedOutputExtractedTextualMaterials
	 */
	message?: TextuallyExtractedMaterials;
	/**
	 *
	 * @type {TextuallyExtractedMaterials}
	 * @memberof QGPTStreamedOutputExtractedTextualMaterials
	 */
	workstream?: TextuallyExtractedMaterials;
}

/**
 * Check if a given object implements the QGPTStreamedOutputExtractedTextualMaterials interface.
 */
export function instanceOfQGPTStreamedOutputExtractedTextualMaterials(
	_value: object,
): boolean {
	const isInstance = true;

	return isInstance;
}

export function QGPTStreamedOutputExtractedTextualMaterialsFromJSON(
	json: any,
): QGPTStreamedOutputExtractedTextualMaterials {
	return QGPTStreamedOutputExtractedTextualMaterialsFromJSONTyped(
		json,
		false,
	);
}

export function QGPTStreamedOutputExtractedTextualMaterialsFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): QGPTStreamedOutputExtractedTextualMaterials {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		message: exists(json, "message")
			? TextuallyExtractedMaterialsFromJSON(json["message"])
			: undefined,
		workstream: exists(json, "workstream")
			? TextuallyExtractedMaterialsFromJSON(json["workstream"])
			: undefined,
	};
}

export function QGPTStreamedOutputExtractedTextualMaterialsToJSON(
	value?: QGPTStreamedOutputExtractedTextualMaterials | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		message: TextuallyExtractedMaterialsToJSON(value.message),
		workstream: TextuallyExtractedMaterialsToJSON(value.workstream),
	};
}
