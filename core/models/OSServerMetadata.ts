/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { TrackedSummaryTotals } from './TrackedSummaryTotals';
import {
    TrackedSummaryTotalsFromJSON,
    TrackedSummaryTotalsFromJSONTyped,
    TrackedSummaryTotalsToJSON,
} from './TrackedSummaryTotals';

/**
 * This will return metadata (total materials) in your pieces drive.
 * @export
 * @interface OSServerMetadata
 */
export interface OSServerMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof OSServerMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TrackedSummaryTotals}
     * @memberof OSServerMetadata
     */
    totals?: TrackedSummaryTotals;
}

/**
 * Check if a given object implements the OSServerMetadata interface.
 */
export function instanceOfOSServerMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OSServerMetadataFromJSON(json: any): OSServerMetadata {
    return OSServerMetadataFromJSONTyped(json, false);
}

export function OSServerMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): OSServerMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'totals': !exists(json, 'totals') ? undefined : TrackedSummaryTotalsFromJSON(json['totals']),
    };
}

export function OSServerMetadataToJSON(value?: OSServerMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'totals': TrackedSummaryTotalsToJSON(value.totals),
    };
}

