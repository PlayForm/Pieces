/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";

/**
 * modeled after this (https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#position)
 * @export
 * @interface LanguageServerProtocolLocationRangePosition
 */
export interface LanguageServerProtocolLocationRangePosition {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof LanguageServerProtocolLocationRangePosition
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {number}
	 * @memberof LanguageServerProtocolLocationRangePosition
	 */
	line: number;
	/**
	 *
	 * @type {number}
	 * @memberof LanguageServerProtocolLocationRangePosition
	 */
	character: number;
}

/**
 * Check if a given object implements the LanguageServerProtocolLocationRangePosition interface.
 */
export function instanceOfLanguageServerProtocolLocationRangePosition(
	value: object,
): boolean {
	let isInstance = true;
	isInstance = isInstance && "line" in value;
	isInstance = isInstance && "character" in value;

	return isInstance;
}

export function LanguageServerProtocolLocationRangePositionFromJSON(
	json: any,
): LanguageServerProtocolLocationRangePosition {
	return LanguageServerProtocolLocationRangePositionFromJSONTyped(
		json,
		false,
	);
}

export function LanguageServerProtocolLocationRangePositionFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): LanguageServerProtocolLocationRangePosition {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		line: json["line"],
		character: json["character"],
	};
}

export function LanguageServerProtocolLocationRangePositionToJSON(
	value?: LanguageServerProtocolLocationRangePosition | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		line: value.line,
		character: value.character,
	};
}
