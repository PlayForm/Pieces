/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";
import { IDETabsFromJSON, IDETabsToJSON, type IDETabs } from "./IDETabs.tsx";
import {
	ProjectModulesFromJSON,
	ProjectModulesToJSON,
	type ProjectModules,
} from "./ProjectModules.tsx";

/**
 * This is the given context for an IDE.
 *
 * tabs: this here refers to the tabs w/in the IDE.
 *
 * Modules here are the given repositories
 *
 * Name: this is the name of a workspace, but not required.
 * @export
 * @interface WorkstreamEventTriggerContextIDE
 */
export interface WorkstreamEventTriggerContextIDE {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof WorkstreamEventTriggerContextIDE
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {IDETabs}
	 * @memberof WorkstreamEventTriggerContextIDE
	 */
	tabs?: IDETabs;
	/**
	 *
	 * @type {ProjectModules}
	 * @memberof WorkstreamEventTriggerContextIDE
	 */
	modules?: ProjectModules;
	/**
	 *
	 * @type {string}
	 * @memberof WorkstreamEventTriggerContextIDE
	 */
	name?: string;
}

/**
 * Check if a given object implements the WorkstreamEventTriggerContextIDE interface.
 */
export function instanceOfWorkstreamEventTriggerContextIDE(
	_value: object,
): boolean {
	const isInstance = true;

	return isInstance;
}

export function WorkstreamEventTriggerContextIDEFromJSON(
	json: any,
): WorkstreamEventTriggerContextIDE {
	return WorkstreamEventTriggerContextIDEFromJSONTyped(json, false);
}

export function WorkstreamEventTriggerContextIDEFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): WorkstreamEventTriggerContextIDE {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		tabs: exists(json, "tabs") ? IDETabsFromJSON(json["tabs"]) : undefined,
		modules: exists(json, "modules")
			? ProjectModulesFromJSON(json["modules"])
			: undefined,
		name: exists(json, "name") ? json["name"] : undefined,
	};
}

export function WorkstreamEventTriggerContextIDEToJSON(
	value?: WorkstreamEventTriggerContextIDE | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		tabs: IDETabsToJSON(value.tabs),
		modules: ProjectModulesToJSON(value.modules),
		name: value.name,
	};
}
