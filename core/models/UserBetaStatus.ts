/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import type { Auth0UserBetaStatus } from "./Auth0UserBetaStatus.tsx";
import {
	Auth0UserBetaStatusFromJSON,
	Auth0UserBetaStatusToJSON,
} from "./Auth0UserBetaStatus.tsx";
import type { EmbeddedModelSchema } from "./EmbeddedModelSchema.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
} from "./EmbeddedModelSchema.tsx";

/**
 * This is used to either grant or remove a specific provider betastatus
 * @export
 * @interface UserBetaStatus
 */
export interface UserBetaStatus {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof UserBetaStatus
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {Auth0UserBetaStatus}
	 * @memberof UserBetaStatus
	 */
	auth0?: Auth0UserBetaStatus;
	/**
	 *
	 * @type {string}
	 * @memberof UserBetaStatus
	 */
	user: string;
}

/**
 * Check if a given object implements the UserBetaStatus interface.
 */
export function instanceOfUserBetaStatus(value: object): boolean {
	let isInstance = true;
	isInstance = isInstance && "user" in value;

	return isInstance;
}

export function UserBetaStatusFromJSON(json: any): UserBetaStatus {
	return UserBetaStatusFromJSONTyped(json, false);
}

export function UserBetaStatusFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): UserBetaStatus {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		auth0: exists(json, "auth0")
			? Auth0UserBetaStatusFromJSON(json["auth0"])
			: undefined,
		user: json["user"],
	};
}

export function UserBetaStatusToJSON(value?: UserBetaStatus | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		auth0: Auth0UserBetaStatusToJSON(value.auth0),
		user: value.user,
	};
}
