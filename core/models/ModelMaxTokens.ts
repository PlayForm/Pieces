/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import type { EmbeddedModelSchema } from "./EmbeddedModelSchema.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
} from "./EmbeddedModelSchema.tsx";

/**
 * This will describe the MaxTokens for an MLModel
 *
 * total is required.
 *
 * iff there is a differentiator with inputs/outputs, then we can also provide those as well.
 * @export
 * @interface ModelMaxTokens
 */
export interface ModelMaxTokens {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof ModelMaxTokens
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {number}
	 * @memberof ModelMaxTokens
	 */
	total: number | null;
	/**
	 *
	 * @type {number}
	 * @memberof ModelMaxTokens
	 */
	input?: number | null;
	/**
	 *
	 * @type {number}
	 * @memberof ModelMaxTokens
	 */
	output?: number | null;
}

/**
 * Check if a given object implements the ModelMaxTokens interface.
 */
export function instanceOfModelMaxTokens(value: object): boolean {
	let isInstance = true;
	isInstance = isInstance && "total" in value;

	return isInstance;
}

export function ModelMaxTokensFromJSON(json: any): ModelMaxTokens {
	return ModelMaxTokensFromJSONTyped(json, false);
}

export function ModelMaxTokensFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): ModelMaxTokens {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		total: json["total"],
		input: exists(json, "input") ? json["input"] : undefined,
		output: exists(json, "output") ? json["output"] : undefined,
	};
}

export function ModelMaxTokensToJSON(value?: ModelMaxTokens | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		total: value.total,
		input: value.input,
		output: value.output,
	};
}
