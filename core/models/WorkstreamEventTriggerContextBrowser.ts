/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import type { BrowserTabs } from "./BrowserTabs.tsx";
import { BrowserTabsFromJSON, BrowserTabsToJSON } from "./BrowserTabs.tsx";
import type { EmbeddedModelSchema } from "./EmbeddedModelSchema.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
} from "./EmbeddedModelSchema.tsx";

/**
 * This is the given context for the browser,
 *
 * a client can pass through many of the same tab if they would like,
 *
 * note: however please try to only side 3 unique website/anchors
 * @export
 * @interface WorkstreamEventTriggerContextBrowser
 */
export interface WorkstreamEventTriggerContextBrowser {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof WorkstreamEventTriggerContextBrowser
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {BrowserTabs}
	 * @memberof WorkstreamEventTriggerContextBrowser
	 */
	tabs?: BrowserTabs;
}

/**
 * Check if a given object implements the WorkstreamEventTriggerContextBrowser interface.
 */
export function instanceOfWorkstreamEventTriggerContextBrowser(
	_value: object,
): boolean {
	const isInstance = true;

	return isInstance;
}

export function WorkstreamEventTriggerContextBrowserFromJSON(
	json: any,
): WorkstreamEventTriggerContextBrowser {
	return WorkstreamEventTriggerContextBrowserFromJSONTyped(json, false);
}

export function WorkstreamEventTriggerContextBrowserFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): WorkstreamEventTriggerContextBrowser {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		tabs: exists(json, "tabs")
			? BrowserTabsFromJSON(json["tabs"])
			: undefined,
	};
}

export function WorkstreamEventTriggerContextBrowserToJSON(
	value?: WorkstreamEventTriggerContextBrowser | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		tabs: BrowserTabsToJSON(value.tabs),
	};
}
