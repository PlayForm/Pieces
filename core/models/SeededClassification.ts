/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	ClassificationGenericEnumFromJSON,
	ClassificationGenericEnumToJSON,
	type ClassificationGenericEnum,
} from "./ClassificationGenericEnum.tsx";
import {
	ClassificationRenderingEnumFromJSON,
	ClassificationRenderingEnumToJSON,
	type ClassificationRenderingEnum,
} from "./ClassificationRenderingEnum.tsx";
import {
	ClassificationSpecificEnumFromJSON,
	ClassificationSpecificEnumToJSON,
	type ClassificationSpecificEnum,
} from "./ClassificationSpecificEnum.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";

/**
 * This is the specific classification of an Asset's Format.(This is on a per format basis b/c an asset could have different formats that are different format representations of the Asset.)
 * @export
 * @interface SeededClassification
 */
export interface SeededClassification {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof SeededClassification
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {ClassificationGenericEnum}
	 * @memberof SeededClassification
	 */
	generic?: ClassificationGenericEnum;
	/**
	 *
	 * @type {ClassificationSpecificEnum}
	 * @memberof SeededClassification
	 */
	specific?: ClassificationSpecificEnum;
	/**
	 *
	 * @type {ClassificationRenderingEnum}
	 * @memberof SeededClassification
	 */
	rendering?: ClassificationRenderingEnum;
}

/**
 * Check if a given object implements the SeededClassification interface.
 */
export function instanceOfSeededClassification(_value: object): boolean {
	const isInstance = true;

	return isInstance;
}

export function SeededClassificationFromJSON(json: any): SeededClassification {
	return SeededClassificationFromJSONTyped(json, false);
}

export function SeededClassificationFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): SeededClassification {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		generic: exists(json, "generic")
			? ClassificationGenericEnumFromJSON(json["generic"])
			: undefined,
		specific: exists(json, "specific")
			? ClassificationSpecificEnumFromJSON(json["specific"])
			: undefined,
		rendering: exists(json, "rendering")
			? ClassificationRenderingEnumFromJSON(json["rendering"])
			: undefined,
	};
}

export function SeededClassificationToJSON(
	value?: SeededClassification | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		generic: ClassificationGenericEnumToJSON(value.generic),
		specific: ClassificationSpecificEnumToJSON(value.specific),
		rendering: ClassificationRenderingEnumToJSON(value.rendering),
	};
}
