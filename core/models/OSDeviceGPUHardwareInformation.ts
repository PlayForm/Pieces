/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import type { EmbeddedModelSchema } from "./EmbeddedModelSchema.tsx";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
} from "./EmbeddedModelSchema.tsx";
import type { OSDeviceGPUHardwareCapabilitiesInformation } from "./OSDeviceGPUHardwareCapabilitiesInformation.tsx";
import {
	OSDeviceGPUHardwareCapabilitiesInformationFromJSON,
	OSDeviceGPUHardwareCapabilitiesInformationToJSON,
} from "./OSDeviceGPUHardwareCapabilitiesInformation.tsx";

/**
 * This will let us know specific hardware information related to the GPU.
 * @export
 * @interface OSDeviceGPUHardwareInformation
 */
export interface OSDeviceGPUHardwareInformation {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof OSDeviceGPUHardwareInformation
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {string}
	 * @memberof OSDeviceGPUHardwareInformation
	 */
	name?: string;
	/**
	 *
	 * @type {number}
	 * @memberof OSDeviceGPUHardwareInformation
	 */
	memory?: number;
	/**
	 *
	 * @type {OSDeviceGPUHardwareCapabilitiesInformation}
	 * @memberof OSDeviceGPUHardwareInformation
	 */
	capabilities?: OSDeviceGPUHardwareCapabilitiesInformation;
}

/**
 * Check if a given object implements the OSDeviceGPUHardwareInformation interface.
 */
export function instanceOfOSDeviceGPUHardwareInformation(
	_value: object,
): boolean {
	const isInstance = true;

	return isInstance;
}

export function OSDeviceGPUHardwareInformationFromJSON(
	json: any,
): OSDeviceGPUHardwareInformation {
	return OSDeviceGPUHardwareInformationFromJSONTyped(json, false);
}

export function OSDeviceGPUHardwareInformationFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): OSDeviceGPUHardwareInformation {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		name: exists(json, "name") ? json["name"] : undefined,
		memory: exists(json, "memory") ? json["memory"] : undefined,
		capabilities: exists(json, "capabilities")
			? OSDeviceGPUHardwareCapabilitiesInformationFromJSON(
					json["capabilities"],
				)
			: undefined,
	};
}

export function OSDeviceGPUHardwareInformationToJSON(
	value?: OSDeviceGPUHardwareInformation | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		name: value.name,
		memory: value.memory,
		capabilities: OSDeviceGPUHardwareCapabilitiesInformationToJSON(
			value.capabilities,
		),
	};
}
