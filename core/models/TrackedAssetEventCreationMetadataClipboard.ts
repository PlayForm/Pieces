/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";

/**
 * If an asset was created from a clipboard event
 * @export
 * @interface TrackedAssetEventCreationMetadataClipboard
 */
export interface TrackedAssetEventCreationMetadataClipboard {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof TrackedAssetEventCreationMetadataClipboard
	 */
	schema?: EmbeddedModelSchema;
	/**
	 * Whether the clipboard was utilized via the keyboard
	 * @type {boolean}
	 * @memberof TrackedAssetEventCreationMetadataClipboard
	 */
	keyboard?: boolean;
	/**
	 * Whether the clipboard was extracted through a button click
	 * @type {boolean}
	 * @memberof TrackedAssetEventCreationMetadataClipboard
	 */
	interaction?: boolean;
}

/**
 * Check if a given object implements the TrackedAssetEventCreationMetadataClipboard interface.
 */
export function instanceOfTrackedAssetEventCreationMetadataClipboard(
	_value: object,
): boolean {
	const isInstance = true;

	return isInstance;
}

export function TrackedAssetEventCreationMetadataClipboardFromJSON(
	json: any,
): TrackedAssetEventCreationMetadataClipboard {
	return TrackedAssetEventCreationMetadataClipboardFromJSONTyped(json, false);
}

export function TrackedAssetEventCreationMetadataClipboardFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): TrackedAssetEventCreationMetadataClipboard {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		keyboard: exists(json, "keyboard") ? json["keyboard"] : undefined,
		interaction: exists(json, "interaction")
			? json["interaction"]
			: undefined,
	};
}

export function TrackedAssetEventCreationMetadataClipboardToJSON(
	value?: TrackedAssetEventCreationMetadataClipboard | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		keyboard: value.keyboard,
		interaction: value.interaction,
	};
}
