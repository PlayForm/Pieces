/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";
import {
	WorkstreamPatternEngineVisionEventFromJSON,
	WorkstreamPatternEngineVisionEventToJSON,
	type WorkstreamPatternEngineVisionEvent,
} from "./WorkstreamPatternEngineVisionEvent.tsx";

/**
 * This will return a list of the returned events.
 * @export
 * @interface SearchedWorkstreamPatternEngineVisionEvent
 */
export interface SearchedWorkstreamPatternEngineVisionEvent {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof SearchedWorkstreamPatternEngineVisionEvent
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {WorkstreamPatternEngineVisionEvent}
	 * @memberof SearchedWorkstreamPatternEngineVisionEvent
	 */
	event?: WorkstreamPatternEngineVisionEvent;
	/**
	 *
	 * @type {boolean}
	 * @memberof SearchedWorkstreamPatternEngineVisionEvent
	 */
	exact?: boolean;
	/**
	 *
	 * @type {number}
	 * @memberof SearchedWorkstreamPatternEngineVisionEvent
	 */
	similarity?: number;
	/**
	 *
	 * @type {boolean}
	 * @memberof SearchedWorkstreamPatternEngineVisionEvent
	 */
	temporal?: boolean;
	/**
	 *
	 * @type {string}
	 * @memberof SearchedWorkstreamPatternEngineVisionEvent
	 */
	application?: string;
	/**
	 * This is the uuid of the event.
	 * @type {string}
	 * @memberof SearchedWorkstreamPatternEngineVisionEvent
	 */
	identifier: string;
}

/**
 * Check if a given object implements the SearchedWorkstreamPatternEngineVisionEvent interface.
 */
export function instanceOfSearchedWorkstreamPatternEngineVisionEvent(
	value: object,
): boolean {
	let isInstance = true;
	isInstance = isInstance && "identifier" in value;

	return isInstance;
}

export function SearchedWorkstreamPatternEngineVisionEventFromJSON(
	json: any,
): SearchedWorkstreamPatternEngineVisionEvent {
	return SearchedWorkstreamPatternEngineVisionEventFromJSONTyped(json, false);
}

export function SearchedWorkstreamPatternEngineVisionEventFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): SearchedWorkstreamPatternEngineVisionEvent {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		event: exists(json, "event")
			? WorkstreamPatternEngineVisionEventFromJSON(json["event"])
			: undefined,
		exact: exists(json, "exact") ? json["exact"] : undefined,
		similarity: exists(json, "similarity") ? json["similarity"] : undefined,
		temporal: exists(json, "temporal") ? json["temporal"] : undefined,
		application: exists(json, "application")
			? json["application"]
			: undefined,
		identifier: json["identifier"],
	};
}

export function SearchedWorkstreamPatternEngineVisionEventToJSON(
	value?: SearchedWorkstreamPatternEngineVisionEvent | null,
): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		event: WorkstreamPatternEngineVisionEventToJSON(value.event),
		exact: value.exact,
		similarity: value.similarity,
		temporal: value.temporal,
		application: value.application,
		identifier: value.identifier,
	};
}
