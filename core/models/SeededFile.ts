/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
	EmbeddedModelSchemaFromJSON,
	EmbeddedModelSchemaToJSON,
	type EmbeddedModelSchema,
} from "./EmbeddedModelSchema.tsx";
import {
	FileMetadataFromJSON,
	FileMetadataToJSON,
	type FileMetadata,
} from "./FileMetadata.tsx";
import {
	TransferableBytesFromJSON,
	TransferableBytesToJSON,
	type TransferableBytes,
} from "./TransferableBytes.tsx";
import {
	TransferableStringFromJSON,
	TransferableStringToJSON,
	type TransferableString,
} from "./TransferableString.tsx";

/**
 * This is a base model for a File(Seeded).
 *
 * We will Throw an Error, if the text and the bytes properties are both null && if both the text and bytes properties are both defined. Ensure that you pass either a text or bytes property.
 *
 * bytes and string are both optionl but, if both are null or both are defined we will throw an error. So You will be required to pass one or the other, NOT both.
 * @export
 * @interface SeededFile
 */
export interface SeededFile {
	/**
	 *
	 * @type {EmbeddedModelSchema}
	 * @memberof SeededFile
	 */
	schema?: EmbeddedModelSchema;
	/**
	 *
	 * @type {TransferableBytes}
	 * @memberof SeededFile
	 */
	bytes?: TransferableBytes;
	/**
	 *
	 * @type {TransferableString}
	 * @memberof SeededFile
	 */
	string?: TransferableString;
	/**
	 *
	 * @type {FileMetadata}
	 * @memberof SeededFile
	 */
	metadata?: FileMetadata;
}

/**
 * Check if a given object implements the SeededFile interface.
 */
export function instanceOfSeededFile(_value: object): boolean {
	const isInstance = true;

	return isInstance;
}

export function SeededFileFromJSON(json: any): SeededFile {
	return SeededFileFromJSONTyped(json, false);
}

export function SeededFileFromJSONTyped(
	json: any,
	_ignoreDiscriminator: boolean,
): SeededFile {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		schema: exists(json, "schema")
			? EmbeddedModelSchemaFromJSON(json["schema"])
			: undefined,
		bytes: exists(json, "bytes")
			? TransferableBytesFromJSON(json["bytes"])
			: undefined,
		string: exists(json, "string")
			? TransferableStringFromJSON(json["string"])
			: undefined,
		metadata: exists(json, "metadata")
			? FileMetadataFromJSON(json["metadata"])
			: undefined,
	};
}

export function SeededFileToJSON(value?: SeededFile | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		schema: EmbeddedModelSchemaToJSON(value.schema),
		bytes: TransferableBytesToJSON(value.bytes),
		string: TransferableStringToJSON(value.string),
		metadata: FileMetadataToJSON(value.metadata),
	};
}
